import{_ as s,c as n,o as a,a as l}from"./app.3ebafb34.js";const p="/web-note/assets/tree1.3818e554.png",b=JSON.parse('{"title":"算法案例","description":"","frontmatter":{},"headers":[{"level":2,"title":"1. 案例1 将一个数组旋转K步","slug":"_1-案例1-将一个数组旋转k步","link":"#_1-案例1-将一个数组旋转k步","children":[{"level":3,"title":"1.1 两种思路","slug":"_1-1-两种思路","link":"#_1-1-两种思路","children":[]},{"level":3,"title":"1.2 复杂度分析","slug":"_1-2-复杂度分析","link":"#_1-2-复杂度分析","children":[]}]},{"level":2,"title":"2. 判断字符串是否括号匹配","slug":"_2-判断字符串是否括号匹配","link":"#_2-判断字符串是否括号匹配","children":[{"level":3,"title":"2.1 思路","slug":"_2-1-思路","link":"#_2-1-思路","children":[]},{"level":3,"title":"2.2 代码实现","slug":"_2-2-代码实现","link":"#_2-2-代码实现","children":[]}]},{"level":2,"title":"3. 两个栈实现一个队列","slug":"_3-两个栈实现一个队列","link":"#_3-两个栈实现一个队列","children":[{"level":3,"title":"队列 VS 数组","slug":"队列-vs-数组","link":"#队列-vs-数组","children":[]},{"level":3,"title":"代码实现","slug":"代码实现","link":"#代码实现","children":[]}]},{"level":2,"title":"4. 封装一个JS函数，反转单向链表","slug":"_4-封装一个js函数-反转单向链表","link":"#_4-封装一个js函数-反转单向链表","children":[{"level":3,"title":"4.1 链表","slug":"_4-1-链表","link":"#_4-1-链表","children":[]},{"level":3,"title":"4.2 链表 vs 数组","slug":"_4-2-链表-vs-数组","link":"#_4-2-链表-vs-数组","children":[]},{"level":3,"title":"4.3 解题思路","slug":"_4-3-解题思路","link":"#_4-3-解题思路","children":[]},{"level":3,"title":"4.4 代码实现","slug":"_4-4-代码实现","link":"#_4-4-代码实现","children":[]}]},{"level":2,"title":"5. 链表实现队列","slug":"_5-链表实现队列","link":"#_5-链表实现队列","children":[{"level":3,"title":"5.1 代码实现","slug":"_5-1-代码实现","link":"#_5-1-代码实现","children":[]},{"level":3,"title":"5.2 性能测试","slug":"_5-2-性能测试","link":"#_5-2-性能测试","children":[]},{"level":3,"title":"5.3 性能分析","slug":"_5-3-性能分析","link":"#_5-3-性能分析","children":[]}]},{"level":2,"title":"6. 用js实现二分查找","slug":"_6-用js实现二分查找","link":"#_6-用js实现二分查找","children":[{"level":3,"title":"6.1 思路","slug":"_6-1-思路","link":"#_6-1-思路","children":[]},{"level":3,"title":"6.2 代码实现","slug":"_6-2-代码实现","link":"#_6-2-代码实现","children":[]}]},{"level":2,"title":"7. 给一个数组，找出其中和为 n 的两个元素","slug":"_7-给一个数组-找出其中和为-n-的两个元素","link":"#_7-给一个数组-找出其中和为-n-的两个元素","children":[{"level":3,"title":"7.1 常规思路","slug":"_7-1-常规思路","link":"#_7-1-常规思路","children":[]},{"level":3,"title":"常规思路代码实现","slug":"常规思路代码实现","link":"#常规思路代码实现","children":[]},{"level":3,"title":"7.3 利用双指针实现","slug":"_7-3-利用双指针实现","link":"#_7-3-利用双指针实现","children":[]},{"level":3,"title":"双指针代码实现","slug":"双指针代码实现","link":"#双指针代码实现","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}]},{"level":2,"title":"8. 求一个二叉树的第 K 小值","slug":"_8-求一个二叉树的第-k-小值","link":"#_8-求一个二叉树的第-k-小值","children":[{"level":3,"title":"8.1 二叉树的遍历","slug":"_8-1-二叉树的遍历","link":"#_8-1-二叉树的遍历","children":[]},{"level":3,"title":"8.1.1 遍历示例","slug":"_8-1-1-遍历示例","link":"#_8-1-1-遍历示例","children":[]},{"level":3,"title":"8.2 二叉搜索树 BST(Binary Search Tree) 特点","slug":"_8-2-二叉搜索树-bst-binary-search-tree-特点","link":"#_8-2-二叉搜索树-bst-binary-search-tree-特点","children":[]},{"level":3,"title":"8.3 思路","slug":"_8-3-思路","link":"#_8-3-思路","children":[]},{"level":3,"title":"8.4 代码实现","slug":"_8-4-代码实现","link":"#_8-4-代码实现","children":[]}]},{"level":2,"title":"9. 求斐波那契第 n 项","slug":"_9-求斐波那契第-n-项","link":"#_9-求斐波那契第-n-项","children":[]}],"relativePath":"web-front/DSAA/computationExample.md"}'),o={name:"web-front/DSAA/computationExample.md"},e=l("",77),r=[e];function t(c,y,F,D,i,C){return a(),n("div",null,r)}const u=s(o,[["render",t]]);export{b as __pageData,u as default};
